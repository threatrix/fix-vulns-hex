emqx_retainer_schema {

  enable {
    desc {
      en: "Enable retainer feature"
      zh: "是否开启消息保留功能"
      }
    }

  msg_expiry_interval {
    desc {
      en: "Message retention time. 0 means message will never be expired."
      zh: "消息保留时间。0 代表永久保留"
      }
    }

  flow_control {
    desc {
      en: "Flow control."
      zh: "流控设置"
      }
    }

  msg_clear_interval {
    desc {
      en: """Periodic interval for cleaning up expired messages.
Never clear if the value is 0.
      """
      zh: "消息清理间隔。0 代表不进行清理"
      }
    }

  max_payload_size {
    desc {
      en: "Maximum retained message size."
      zh: "消息大小最大值"
      }
    }

  stop_publish_clear_msg {
    desc {
      en: """When the retained flag of the `PUBLISH` message is set and Payload is empty,
whether to continue to publish the message.
See:
http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html#_Toc398718038"""
      zh: """是否不发送保留消息的清理消息，在 MQTT 5.0 中如果一条保留消息的消息体为空，则会清除掉之前存储
的对应的保留消息，通过这个值控制是否停止发送清理消息"""
      }
    }

  backend {
    desc {
      en: "Settings for the database storing the retained messages."
      zh: "保留消息的存储后端"
      }
    }

  mnesia_config_type {
    desc {
      en: "Backend type."
      zh: "后端类型"
      }
    }

  mnesia_config_storage_type {
    desc {
      en: "Specifies whether the messages are stored in RAM or persisted on disc."
      zh: "选择消息是存放在磁盘还是内存中"
      }
    }

  max_retained_messages {
    desc {
      en: "Maximum number of retained messages. 0 means no limit."
      zh: "消息保留的数量上限。0 表示无限"
      }
    }

  batch_read_number {
    desc {
      en: "Size of the batch when reading messages from storage. 0 means no limit."
      zh: "从存储后端批量加载时的每批数量上限，0 代表一次性读取"
      }
    }

  batch_deliver_number {
    desc {
      en: "The number of retained messages can be delivered per batch."
      zh: "批量派发时每批的数量。0 代表一次性全部派发"
      }
    }

  batch_deliver_limiter {
    desc {
      en: """The rate limiter name for retained messages' delivery.
Limiter helps to avoid delivering too many messages to the client at once, which may cause the client to block or crash, or drop messages due to exceeding the size of the message queue.
The names of the available rate limiters are taken from the existing rate limiters under `limiter.batch`.
If this field is empty, limiter is not used."""
      zh: """批量发送的限流器的名称。
限流器可以用来防止短时间内向客户端发送太多的消息，从而避免过多的消息导致客户端队列堵塞甚至崩溃。
这个名称需要是指向 `limiter.batch` 下的一个真实存在的限流器。
如果这个字段为空，则不使用限流器。
      """
      }
    }

}
