emqx_gateway_api_clients {

    list_clients {
        desc {
            en: """Get the gateway client list"""
            zh: """获取指定网关的客户端列表"""
        }
    }

    get_client {
        desc {
            en: """Get the gateway client information"""
            zh: """获取客户端信息"""
        }
    }

    kick_client {
        desc {
            en: """Kick out the gateway client"""
            zh: """踢出指定客户端"""
        }
    }

    list_subscriptions {
        desc {
            en: """Get the gateway client subscriptions"""
            zh: """获取某客户端的主题订阅列表"""
        }
    }

    add_subscription {
        desc {
            en: """Create a subscription membership"""
            zh: """为某客户端新增订阅关系"""
        }
    }

    delete_subscription {
        desc {
            en: """Delete a subscriptions membership"""
            zh: """为某客户端删除某订阅关系"""
        }
    }

    param_node {
        desc {
            en: """Match the client's node name"""
            zh: """匹配客户端的节点名称"""
        }
    }

    param_clientid {
        desc {
            en: """Match the client's ID"""
            zh: """匹配客户端 ID"""
        }
    }

    param_username {
        desc {
            en: """Match the client's Username"""
            zh: """匹配客户端 Username"""
        }
    }

    param_ip_address {
        desc {
            en: """Match the client's ip address"""
            zh: """匹配客户端 IP 地址"""
        }
    }

    param_conn_state {
        desc {
            en: """Match the client's connection state"""
            zh: """匹配客户端连接状态"""
        }
    }

    param_proto_ver {
        desc {
            en: """Match the client's protocol version"""
            zh: """匹配客户端协议版本"""
        }
    }

    param_clean_start {
        desc {
            en: """Match the client's clean start flag"""
            zh: """匹配客户端 `clean_start` 标记"""
        }
    }

    param_like_clientid {
        desc {
            en: """Use sub-string to match client's ID"""
            zh: """子串匹配客户端 ID"""
        }
    }

    param_like_username {
        desc {
            en: """Use sub-string to match client's username"""
            zh: """子串匹配 客户端 Username"""
        }
    }

    param_gte_created_at {
        desc {
            en: """Match the session created datetime greater than a certain value"""
            zh: """匹配会话创建时间大于等于指定值的客户端"""
        }
    }

    param_lte_created_at {
        desc {
            en: """Match the session created datetime less than a certain value"""
            zh: """匹配会话创建时间小于等于指定值的客户端"""
        }
    }

    param_gte_connected_at{
        desc {
            en: """Match the client socket connected datetime greater than a certain value"""
            zh: """匹配连接创建时间大于等于指定值的客户端"""
        }
    }

    param_lte_connected_at {
        desc {
            en: """Match the client socket connected datatime less than a certain value"""
            zh: """匹配连接创建时间小于等于指定值的客户端"""
        }
    }

    param_endpoint_name {
        desc {
            en: """Match the lwm2m client's endpoint name"""
            zh: """匹配 LwM2M 客户端 Endpoint Name"""
        }
    }

    param_like_endpoint_name {
        desc {
            en: """Use sub-string to match lwm2m client's endpoint name"""
            zh: """子串匹配 LwM2M 客户端 Endpoint Name"""
        }
    }

    param_gte_lifetime {
        desc {
            en: """Match the lwm2m client registered lifetime greater than a certain value"""
            zh: """匹配心跳时间大于等于指定值的 LwM2M 客户端"""
        }
    }

    param_lte_lifetime {
        desc {
            en: """Match the lwm2m client registered lifetime less than a certain value"""
            zh: """匹配心跳时间小于等于指定值的 LwM2M 客户端"""
        }
    }

    clientid {
        desc {
            en: """Client ID"""
            zh: """客户端 ID"""
        }
    }

    topic {
        desc {
            en: """Topic Filter/Name"""
            zh: """主题过滤器或主题名称"""
        }
    }

    endpoint_name {
        desc {
            en: """The LwM2M client endpoint name"""
            zh: """LwM2M 客户端 Endpoint Name"""
        }
    }

    lifetime {
        desc {
            en: """LwM2M Life time"""
            zh: """LwM2M 客户端心跳周期"""
        }
    }

    qos {
        desc {
            en: """QoS level, enum: 0, 1, 2"""
            zh: """QoS 等级，枚举：0，1，2"""
        }
    }

    nl {
        desc {
            en: """No Local option, enum: 0, 1"""
            zh: """No Local 选项，枚举：0，1"""
        }
    }

    rap {
        desc {
            en: """Retain as Published option, enum: 0, 1"""
            zh: """Retain as Published 选项，枚举：0，1"""
        }
    }

    rh {
        desc {
            en: """Retain Handling option, enum: 0, 1, 2"""
            zh: """Retain Handling 选项，枚举：0，1，2"""
        }
    }

    sub_props {
        desc {
            en: """Subscription properties"""
            zh: """订阅属性"""
        }
    }

    subid {
        desc {
            en: """Only stomp protocol, a unique identity for the subscription. range: 1-65535."""
            zh: """订阅ID，仅用于 Stomp 网关。用于创建订阅关系时指定订阅 ID。取值范围 1-65535。"""
        }
    }

    node {
        desc {
            en: """Name of the node to which the client is connected"""
            zh: """客户端连接到的节点名称"""
        }
    }

    username {
        desc {
            en: """Username of client when connecting"""
            zh: """客户端连接的用户名"""
        }
    }

    mountpoint {
        desc {
            en: """Topic mountpoint"""
            zh: """主题固定前缀"""
        }
    }

    proto_name {
        desc {
            en: """Client protocol name"""
            zh: """客户端使用的协议名称"""
        }
    }

    proto_ver {
        desc {
            en: """Protocol version used by the client"""
            zh: """客户端使用的协议版本"""
        }
    }

    ip_address {
        desc {
            en: """Client's IP address"""
            zh: """客户端 IP 地址"""
        }
    }

    port {
        desc {
            en: """Client's port"""
            zh: """客户端端口"""
        }
    }

    is_bridge {
        desc {
            en: """Indicates whether the client is connected via bridge"""
            zh: """标识客户端是否通过 is_bridge 标志连接"""
        }
    }

    connected_at {
        desc {
            en: """Client connection time"""
            zh: """客户端连接时间"""
        }
    }

    disconnected_at {
        desc {
            en: """Client offline time, This field is only valid and returned when connected is false"""
            zh: """客户端连接断开时间"""
        }
    }

    connected {
        desc {
            en: """Whether the client is connected"""
            zh: """标识客户端是否已连接到网关"""
        }
    }

    keepalive {
        desc {
            en: """Keepalive time, with the unit of second"""
            zh: """Keepalive 时间，单位：秒"""
        }
    }

    clean_start {
        desc {
            en: """Indicate whether the client is using a brand new session"""
            zh: """标识客户端是否以 clean_start 的标志连接到网关"""
        }
    }

    expiry_interval {
        desc {
            en: """Session expiration interval, with the unit of second"""
            zh: """会话超期时间，单位：秒"""
        }
    }

    created_at {
        desc {
            en: """Session creation time"""
            zh: """会话创建时间"""
        }
    }

    subscriptions_cnt {
        desc {
            en: """Number of subscriptions established by this client"""
            zh: """客户端已订阅主题数"""
        }
    }

    subscriptions_max {
        desc {
            en: """Maximum number of subscriptions allowed by this client"""
            zh: """客户端允许订阅的最大主题数"""
        }
    }

    inflight_cnt {
        desc {
            en: """Current length of inflight"""
            zh: """客户端当前飞行窗口大小"""
        }
    }

    inflight_max {
        desc {
            en: """Maximum length of inflight"""
            zh: """客户端允许的飞行窗口最大值"""
        }
    }

    mqueue_len {
        desc {
            en: """Current length of message queue"""
            zh: """客户端当前消息队列长度"""
        }
    }

    mqueue_max {
        desc {
            en: """Maximum length of message queue"""
            zh: """客户端允许的最大消息队列长度"""
        }
    }

    mqueue_dropped {
        desc {
            en: """Number of messages dropped by the message queue due to exceeding the length"""
            zh: """由于消息队列过程，客户端消息队列丢弃消息条数"""
        }
    }

    awaiting_rel_cnt {
        desc {
            en: """Number of awaiting acknowledge packet"""
            zh: """客户端当前等待 PUBREL 确认的 PUBREC 消息的条数"""
        }
    }

    awaiting_rel_max {
        desc {
            en: """Maximum allowed number of awaiting PUBREC packet"""
            zh: """客户端允许的最大 PUBREC 等待队列长度"""
        }
    }

    recv_oct {
        desc {
            en: """Number of bytes received"""
            zh: """已接收的字节数"""
        }
    }

    recv_cnt {
        desc {
            en: """Number of socket packets received"""
            zh: """已接收 Socket 报文次数"""
        }
    }

    recv_pkt {
        desc {
            en: """Number of protocol packets received"""
            zh: """已接收应用层协议控制报文数"""
        }
    }

    recv_msg {
        desc {
            en: """Number of message packets received"""
            zh: """已接收上行的消息条数"""
        }
    }

    send_oct {
        desc {
            en: """Number of bytes sent"""
            zh: """已发送字节数"""
        }
    }

    send_cnt {
        desc {
            en: """Number of socket packets sent"""
            zh: """已发送 Socket 报文次数"""
        }
    }

    send_pkt {
        desc {
            en: """Number of protocol packets sent"""
            zh: """已发送应用层协议控制报文数"""
        }
    }

    send_msg {
        desc {
            en: """Number of message packets sent"""
            zh: """已发送下行消息数条数"""
        }
    }

    mailbox_len {
        desc {
            en: """Process mailbox size"""
            zh: """进程邮箱大小"""
        }
    }

    heap_size {
        desc {
            en: """Process heap size with the unit of byte"""
            zh: """进程堆内存大小，单位：字节"""
        }
    }

    reductions {
        desc {
            en: """Erlang reduction"""
            zh: """进程已消耗 Reduction 数"""
        }
    }
}
